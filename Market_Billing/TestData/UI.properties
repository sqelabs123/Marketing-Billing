#User name text field
Userenter=id:j_username
#Enter User name
enterpassword=id:predigpass
#Click Login Button
loginbtn=name:submit
#Logout icon 
logouticon=xpath:(.//*[@class='icon-user'])[2]
#logout button
logoutbtn=xpath:(.//*[@class='dropdown-menu'])[2]/li[5]/a/i

#Custoemrs tab click.
#clickcustomersbtn=xpath:(.//*[contains(text(),'Customers')])[3]
clickcustomersbtn=xpath://*[@id="navbar-menu"]/div/ul/li[2]/a/i
#Enter Custoemr Type
custTypeE=id:custTypeEl
#Enter category of custoemr
category=id:category
#Title Name
titleofcust=id:sal
#titleofcust=xpath://*[@id="sal"
titlecommerial=xpath:(//input[contains(@name,'sal')])[2]
#enter First name
firstName=name:firstName
#enter Surname
Surname=id:surname
#Enter Mobile number
#enter Phone (BH)
Phone_BH=xpath://*[@id="contact_phone"]
#Enter Phone AH
Phone_AH=xpath://*[@id="contact_ah_phone"]
mobile=id:contact_mobile
#enter email
cont_email=name:contact_email
#enter address
Address=id:hAddress


#Enter City or Suburb
CityorSuburb=id:hSuburb
#Add State
Customer_State=id:hState
#Pin add
CustomerPIN=name:pcode
#CustomerPIN=xpath://*[@id="content"]/div[2]/div[3]/form/div/div[2]/div[1]/div[2]/div[5]/div/input
#Contract Start Date
Contractdate:id:contract_start_date
#Select Today 
SelectTodaydate=xpath:.//*[contains(text(),'Today')]
#SelectTodaydate=xpath:.(//*[contains(text(),'Today')])[1]

#Contract term
ContractTerm:id:contract_term
#Company name
companyname=id:company
#Add ABN Number.
comp_abn=id:abn
#Save Customer
Savecustomer=xpath:.//*[contains(text(),'Save Customer')]
#Click on 'Save Only' button on Popup
saveonlybtn=xpath:(.//*[contains(text(),'Save Only')])[2]
#Save comstumer with Save only with provisionalt Service

#Assertion on Save Customer 
assertCustoemrsave=xpath:.//*[contains(text(),'Successfully saved customer.')]

#save and Add provissioning button.
savewthAdProvisioning=xpath:(.//*[contains(text(),'Save and Add Provisioning')])[2]
#Add Service Type under Add Provisioning service
serviceType=id:serviceType
#Select market type
market_type=id:marketTypeSel
#market_type=id:marketType
#Select Transfer Type
transfer_typ=id:transferType
#transfer_typ=xpath:.//*[@id='meterReadType']

#Generate Virtual NMI
generateVirtualNMI=cssselector:button#generateNMIButton

#Select NMI
NMI=id:NMI
#Select single value of check sum
NMICheckSum=id:NMICHECKSUM
#NMI Class Code
#nmiclassCode=id:NMIClassification
#nmiclassCode=id:classCode
nmiclassCode=id:NMIClassification
#service Plan
Serviceplan=id:planNo
#sale date select
Sale_date=id:saleDate
#sale date current
currentdate=xpath:.//*[contains(text(),'Today')]
#currentdate=xpath://td[@class='day active'][contains(.,'16')]
#currentdate=xpath:(.//*[contains(text(),'16')])[1]
#Selct Perpose date
perposedate=id:proposedDate
#Selct movein date field
moveindate_field=id:proposedDate

#Purpose Cusrrent Date
P_currentdate=xpath:(.//*[contains(text(),'23')])[1]

#Select Movein date
MoveIn_date=cssselector:td.active

#Transfer MeterRead Type
Transfermeter=id:meterReadType

#UseStructureTogglebutton
useStructuretoggle=class:switch-label
#Building Name
Building=id:buildingName
#flat type
Unittyp=id:flatType
#House Number Suffix 
housesufix=id:houseNBRSuffix
#Suburb Address
Suburb_address=id:locality
#Postal Code
Post_Code=id:postCode
#Enter_State
Enter_State=Id:state
#ServiceAdd
ServiceAdd=id:submitBttn
#Change Status Button
Change_Status=xpath:(.//*[contains(text(),'Change Status')])[1]
#Assertion on Change Stauts Popup
Change_Statuspopup=xpath:(.//*[contains(text(),'Change Status')])[2]
#change Status Type
statustype=id:acctStatus
#reason
reason=id:statusReason
#savereson
savereson=id:save
#Assertion on change status under customer
popupchagestatus=xpath:(.//*[contains(text(),'Status change successful.')])[2]
#Close Button
closebtn=class:close
#  (.//*[@class='icon-user'])[5]
clickcustomersbtn1=xpath:(.//*[@class='icon-user'])[5]
# Service Add
#successservice=xpath:.//*[contains(text(),'success!')]
successservice=id:alert_service_created
#click Service Tab
servicetab=xpath:.//*[contains(text(),'Services')]
#serviceid
service_id1=xpath:.//*[@class='odd']/td[5]
#service_id=xpath:.//*[contains(text(),'EL')]
service_id=xpath:.//*[contains(text(),'Electricity')]
#Search survice
searchservice=xpath:(.//*[@type='search'])[1]
#market
#marketbtn=xpath:(.//*[@class='box-content'])[1]/div/table/tbody/tr/td[10]/button/i
marketbtn=xpath:.//*[@class='odd']/td[9]/button[1]/i
#AssertionRetailServive
#assertEditService=xpath:.//*[contains(text(),'Retail electricity Service Details')]
assertEditService=xpath:html/body/div[5]/div/div[2]/div[2]/div[2]/div/div[1]/form/div[2]/div[1]/h2

#Service Status 
ServiceStatus=id:serviceStatus
#Save Service edit
editsaveservice=xpath:.//*[contains(text(),'Save changes')]
#Confirm Save
OK=xpath:.//*[contains(text(),'OK')]

#Plans Tab
RatePlantab=xpath:.//*[contains(text(),'Plans')]
#Rate Plan Assertion Under Rate Plan
AssertPlans=xpath:.//*[contains(text(),'Rate Plans')]
#Create Plans
Addplan=id:addBtn
#Assertion on Create Rate Plan page
rateplanpage=xpath:(.//*[contains(text(),'Rate Plan')])[2]
UsageType=id:usageTypes

#Name Of Plan
name=id:name
#Usage TOU
usageTou=id:usageTOU
#Deman Tou
demantou=id:demandTOU

#Date Valid From
DVF=id:dateValidFrom
#MonthFrom
#monthPopupFrom=xpath:(.//th[@class='datepicker-switch'])[1]
 
#SelectMonthFrom
#monthFrom=xpath:(.//span[@class='month' or @class='month active'])[1] 

#SelectDateFrom
#dateFrom=xpath:(.//td[@class='day'])[1]



#Select Today Date
Todaydate=xpath:(.//*[contains(text(),'Today')])[1]
#Date selct to Date
DVT=id:dateValidTo
#SelectMonthFrom
#selectMonthFrom=xpath:(.//span[@class='month' or @class='month active'])[12]

#SelectDateFrom
#selectDateFrom=xpath:(.//td[@class='day'])[31]





#Add Tariff Button
tariffbtn=id:addTrfBtn
#Assertion on Tariff Plan page
TariffPlanpage=xpath:(.//*[contains(text(),'Add Tariff')])[2]

#Add Charge Description
chrgdesc=id:charge-desc
tab=xpath:(.//*[contains(text(),'Add Tariff')])[2]
#add Rollup Description
rollupdesc=id:rollup-desc
#add charge-type
chargTyp=id:charge-type
#Rating Method
ratingmethod=id:method-type
#Demand Threshold
demandthreshold=id:demandThreshold

#Unit Type
unittype=id:unit-type

#Season
season=cssselector:select#season

#Rate under tariff
rateTariff=id:rate

#Daylight Saving option
DSO=id:dst

#Save RtariffPlan
RatTariffAdd=id:addTrf

#searchtariff
searchTariff=xpath:.//*[@id='datatablePreview_wrapper']/div[1]/label/input
#publish Plan
planPublish=id:publishBtn
#Publish plan close
close=class:icon-remove

#Search Created Plan under Rate Plan Page
SearchPlan=xpath:.//*[@class='dataTables_filter']/label/input
getplanno=xpath:.//*[@class='odd']

#Updated xpath ----------------------------------------------------------------------------->
#Edit button
editButton=cssselector:a[title=Edit]

#Add prorata
prorataButton=cssselector:i.icon-calendar

#Enable Prorata
enableProrata=cssselector:span.switch-label

#Date From
dateFromField=cssselector:input#rangeFrom

#Open month popup
monthPopupFrom=xpath:(.//th[@class='datepicker-switch'])[1]
#Select month
monthFrom=xpath:(.//span[@class='month' or @class='month active'])[1]

#Select day
dateFrom=xpath:(.//td[@class='day'])[1]


#Date To
dateToField=cssselector:input#rangeTo
#Open month popup
monthPopupTo=xpath:(.//th[@class='datepicker-switch'])[1]
#Select month
monthTo=xpath:(.//span[@class='month' or @class='month active'])[12]
#Select day
dateTo=xpath:(.//td[@class='day'])[31]




#Add Rate
prorataRate=cssselector:input#rateR

#Add Button
addProrata=cssselector:button#addProrataBtn

#Close
closeButton=cssselector:button#prorataClose

#Assert Success Message
successPlan=xpath:(.//*[contains(text(),'successfully  updated')])[1]
#------------------------------------------------------------------------------------->

#Admin Tab 
admin=xpath:.//*[contains(text(),'Admin')]
#TOU Button
TOU_def=xpath:.//*[contains(text(),'TOU Definitions')]

#Assertion on TOU Defination page
TOUdefination=xpath:.//*[contains(text(),'TOU Definitions Data Import')]
#plan Number Get :
PlanNumberget=xpath:.//*[@class="odd"]/td[3]

#percentage of Load 
PercentageOfLoad=id:loadPercentage

#From tired Rate	
FromTired=id:ulow

#To Tired Dat
toTired=id:uhigh

#Rate ammount
RateR=id:rateR

#add Rate Rang 
rangbtn=id:addRangeBtn

#minimumDemandReads
minReads=id:minimumDemand
# 
# from Day
fromday=id:daysFrom

#To Day
to_day=id:daysTo

#Check Statuts 
checkStatus=id:status

#company name 
companyBusinessname=id:company

#Add Abn
ABN_number=id:abn

#add Contract Start Date 
ContractStartdt=id:contract_start_date

#add Contract Team
contractTeam=id:contract_term

#Sesrch Input
searchCustmer=id:search_input

#Search Button
searchbtn=id:btn_search

# Givenname
GivenName=id:firstName

#Surname
#Surname1=xpath:(.//*[@name='surname'])[2]
Surname1=id:surname
#Phone Number
phnNumber=xpath:(.//*[@name='contact_phone'])[2]

#test 
#ContEmail=xpath:(.//*[@name='contact_email'])[2]
ContEmail=xpath://*[@id="contact_email"]

#Click on Ovierview
Overview11=Xpath:.//*[contains(text(),'Overview')]

#Add Customer
ClickRetailElec=xpath:(.//*[@class='icon-plus'])[2]

# Add Netting Configration
nettConfig=id:nettingConfig

#Sub Channel Aggregation
SubChannelAggr=id:subChannelAggregation

#Click Site parameter
SiteParameters=xpath:(.//*[contains(text(),'Site Parameters')])[1]
#SiteParameters=xpath:(.//div[@style='margin-top:25px;']/button)[2]

# Assertion on Network Site Specific Parameters
AssertSiteParameter=xpath:.//*[contains(text(),'Network Site Specific Parameters')]

#Add parameter
Add_parameter=id:ad
#Assertion Site paramenter page open
SetupSiteParameter=xpath:.//*[contains(text(),'Set Up Site Parameter')]

#effective Date
EfectiveDateA=id:effectiveDate

#parameter add 
ParameterSelc=id:parameterName

#paramentervalue
parametervalue=id:paramValue

#Add Site Plan
siteplans=xpath:.//*[contains(text(),'Site Plans')]
#siteplans=xpath:(.//div[@style='margin-top:25px;']/button)[1]

#Rate Plan Sequence page
assertionRatePlanSeq=xpath:.//*[contains(text(),'Rate Plan Sequence')]

#Add Plan Button Click
AddbtnClick=xpath:(.//*[@id='addPlanBtn'])[1]

#click add plan option 
plan_s=id:planSelected

#select plan 
#SelecPlan=xpath:(.//*[@id='groupPlans'])/li[1]
#select plan 
SelecPlan=xpath:(.//*[@id='groupPlans'])/li[2]
#startdate
srtDate=id:startDate

#end Date
endDate=id:endDate

#Add Plan
#AddplanBtn2=xpath:(.//*[@id='addPlanBtn'])[2]
AddplanBtn2=id:addPlanToTableBtn

#Sav Plan ff
SavePlanf=id:saveChangesBtn

#Ok Plan 
Okbtn=xpath:.//*[contains(text(),'OK')]

#Confirm Ok button
confOk=xpath:.//*[contains(text(),'OK')]

#Bill Run Cycle
BIllRunCylce=xpath:.//*[contains(text(),'Bill Run Cycles')]

#Create Button ne Bill Run Cycle 
CreateBillRun=id:addBtn

#cycleName
cyclenm=id:cyclename

#cycleDropDown
cycleDropDown=xpath:.//*[@class='btn dropdown-toggle selectpicker btn-default']


#Value enter
valuePlan=id:paramValue

#Add parameter to add select
AdDbtN=id:addParamBtn

#save Parameter regards plan 
SaveBTN=id:saveChangesBtn

#add Bill RUn Cycle
billrun_search=xpath:(.//*[@class='col-xs-6'])[2]/div/label/input
# edit bill run
Select_editBIll=xpath:.//*[@class='odd']/td[6]/a[1]/i

#Assertion  on Add Bill Run Cycle
AddBillRUnCycle=xpath:.//*[contains(text(),'Add Bill Run Cycle')]

#Save Cycle 
SaveCycl=id:saveCycle


#Save Cycle Name
AssertSaveCycle=xpath:.//*[contains(text(),'Successfully added new bill run cycle.')]

#save Site parameter
Savesiteparameter=id:saveServiceParamsBtn

#Added Element xpath by Aditi.....

#Search cycle name
Searchcycname=xpath:.//div[@class='bootstrap-select-searchbox']/input

#Filter Customer
Filter=xpath:(.//input[@class='filter form-control'])[1]

#Customer List Filter
customer_List_Filter=xpath:(.//input[@class='filter form-control'])[1]

#select searched customer
#select_customer=xpath:.//select[@id='bootstrap-duallistbox-nonselected-list_custnos']/option[first()]
select_customer=xpath:.//select[@class='form-control']/option[last()]
#Move Selected Customer
Movebtn=xpath:.//div[@class='btn-group buttons']/button[2]

#Updated test cases for Bill Run----------------------------------------------------------------------->





#Search All Customer
search_all_Customer=cssselector:button#btn_search

#Add Metering
addMeter=cssselector:a#addMeter

#Create Meter Assertion
AssertCreateMeter=xpath:(.//*[contains(text(),'Create Meter')])[1]

#Meter Serial Number
meterSerialNumber=cssselector:input.forvalidation

#Consumption Type
consumptionType=cssselector:select#consumptionType

#Configuration Type
configurationType=cssselector:select#configurationType

#Last Test Date
lastTestDate=cssselector:input#maintenanceDate

#Select Last Test Date
#selectLastTestDate=xpath:(.//th[@class='today'])[1]

#Date Connected
dateConnected=cssselector:input#datecon

#Select Date Connected
#selectDateConnected=xpath:(.//th[@class='today'])[1]

#Create Meter
createMeter=cssselector:button#createMeter

#Success Message 
successMessageMeter=xpath:.//*[contains(text(),'Successfully registered meter.')]


#Edit Meter
editMeter=xpath:(.//i[@class='icon-edit'])[1]

#Retail Electricity Meter Details Assertion Under Metering
AssertMetering=xpath:.//*[contains(text(),'Retail Electricity Meter Details')]

#Add Meter Register
meterRegister=cssselector:a#addRegister

#Create Register Assertion
AssertMeterRegister=xpath:(.//*[contains(text(),'Create Register')])[1]

#Rgister ID
registerId=cssselector:input#registerNo

#Network Tariff Code
networkTariffCode=cssselector:input#networkTariffCode

#Unit of Measure
unitOfMeasure=cssselector:input#unitOfMeasure

#Time of Day
timeOfDay=cssselector:input#timeOfDay

#Dail Format
dailFormat=cssselector:input#dialFormat

#Controlled Load
controlledLoad=cssselector:input#controlledLoad

#Demand1
demand1=cssselector:input#demand1

#Demand2
demand2=cssselector:input#demand2

#NMI Suffix
nmiSuffix=cssselector:input#nmiSuffix

#Register Date Connected
registerdateConnected=cssselector:input#datecon

#Create Register
createRegister=cssselector:button#createRegister

#Success Message 
successMessageMeterRegister=xpath:.//*[contains(text(),'Successfully created meter register.')]


#Meter Reads Tab
meterReads=xpath:.//*[contains(text(),' Meter Reads')]

#Meter Information Assertion under Meter Reads tab
AssertMeterInformation=xpath:.//*[contains(text(),'Meter Information')]

#Meter Number
meterNumber=cssselector:select#meterNo

#View Meter Reads
viewMeterReads=cssselector:a#viewMeterReads

#Add Read
addRead=xpath:.//*[contains(text(),'Add Read')]

#Meter Number
meterNo=cssselector:select#rmeterno

#Read type
readType=cssselector:select#rreadType

#Read Date
readDate=cssselector:input#rreadDate



#Select Read Date
selectReadDate=

#Meter Read(Peak)
meterReadP=cssselector:input#modalReadingP

#Meter Read(Off Peak)
meterReadO=cssselector:input#modalReadingO

#Meter Read(Shoulder)
meterReadS=cssselector:input#modalReadingS

#Save
save=xpath:.//div[@class='col-lg-12']/button

#Bill Run
billRun=cssselector:i.icon-tasks

#Run the bills
runTheBills=xpath:.//*[contains(text(),'Run the bills')]

#Start Date
startDate=cssselector:input#cycleDate

#Select Last Day
lastDay=xpath:(.//td[@class='day' or @class='active day'][last()])[last()]

#End Date
endDate=cssselector:input#cycleEnd

#Issue Date
issueDate=cssselector:input#issueDate

#Due Date
dueDate=cssselector:input#dueDate

#Run Bill Button
runBill=xpath:.//*[contains(text(),'Run Bill')]

#Success Bill Run
successBillRun=xpath:.//*[contains(text(),'Bill Run Complete!')]

#customerManage
custmanage=xpath:(.//i[@class='icon-edit '])[1]

#SelectBillRunCycle
billRunCycle=cssselector:select#cycleno

#------------------------->Rollback Scenarios-------------------------------------------->

#ViewBillRun
viewBillRunStatement=xpath:(.//button[@class='btn btn-primary'])[2]

#RollbackAndFixButton
rollbackAndFixButton=cssselector:button#rollback-and-fix

#ContinueRollback
continueRollback=xpath:(.//*[contains(text(),'Continue rollback')])[2]

#ValidateSuccessMessage
successsRollback=xpath:.//div[@class='bootstrap-dialog-body']

#CloseIcon
closeIcon=xpath:(.//button[@class='close'])[4]

#CloseIcon
closeIcon2=xpath:(.//button[@class='close'])[1]

#YesButton
yesButton=xpath:.//*[contains(text(),'Yes')]

#StatementTab
statementTab=xpath:(.//*[contains(text(),'Statements')])[1]

#ViewDetailsButton
viewDetails=xpath:.//a[@title='View Details']

#RollbackButton
rollbackButton=xpath:(.//*[contains(text(),' Rollback')])[1]

#RollbackReason
rollbackReason=cssselector:textarea#rollbackReason

#OkButton
okButton=cssselector:button#confirmDelete

#InformationPopup
informationPopup=xpath:(.//*[contains(text(),'Information')])[2]

#ViewRollbackHistory
viewRollbackHistory=xpath:.//*[contains(text(),' View Rollback History')]

#Rebill Scenarios--------------------------------------------------------------->

#Rebill button
rebillButton=xpath:(//i[@class='icon-tasks'])[2]

#Run bill Button
runBill2=cssselector:button#runBill

#Rebill Result
resultPopup=xpath:(.//*[contains(text(),'Re-bill for Statement')])[2]

#Bill Run Search
billRunSearch=xpath://*[contains(text(),' Bill Run Search')]

#Statement Toggle
statementToggle=cssselector:span.switch-label

########## Auto Due Date------------------------------------------------------------------>

#Edit Group
editGroup=xpath:.//*[contains(text(),'Edit Group')]

#Due Date by Payment Terms
#dueDatePaymentTerms=cssselector:input#dueDateByPaymentTerms
dueDatePaymentTerms=xpath:(.//span[contains(@class, 'switch-label') and contains(@data-off, 'No')])[10]

#Commercial Checkbox
commercialCheckbox=xpath:.//input[@value='C']

#Residential Checkbox
residentialCheckbox=xpath:.//input[@value='R']

#Business Checkbox
businessCheckbox=xpath:.//input[@value='B']

#Payment Term Method(G)
paymentTermMethodG=cssselector:select#g_payment_term_method

#Payment number of days
paymentDays=cssselector:input.numericInputOnly

#Save changesButton
saveChangesButton=cssselector:a#saveChangesBtn

#Payment Term Method
paymentTermMethod=cssselector:select#payment_term

#Payment number of days comm
paymentDaysC=cssselector:input#term_days

#assert success message
assertSuccessMessage=xpath:.//*[contains(text(),'Success!')]

#Details Tab
detailsTab=xpath:(//*[contains(text(),' Details')])[1]



#Workday Schedule
workdaySchedule=xpath:.//*[contains(text(),'Workday Schedule')]

#Select Calender
selectCalender=cssselector:select#calSelect

#Start Date
startDateH=xpath:(//input[@class='date-picker'])[1]

#End Date
endDateH=xpath:(//input[@class='date-picker'])[2]

#View Button
viewHoliday=cssselector:button#preview

#Import Meter Numbers
meterNumbers=xpath:.//*[contains(text(),'Meter Numbers')]







